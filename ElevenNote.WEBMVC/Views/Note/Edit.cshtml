@model ElevenNote.Models.NoteModels.NoteEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Note Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NoteID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })<br />
                @Html.DisplayFor(model => model.IsStarred, new { ID = Model.NoteID })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IsStarred, new { ID = Model.NoteID })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.CategoryID, ViewBag.CategoryID as SelectList, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("CategoryID", ViewBag.CategoryID as SelectList, htmlAttributes: new { @class = "form-control" })

                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts {
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $("i[data-toggle='star']")
                .css({ "cursor": "pointer" })
                .click(function (e) {
                    var target = $(e.target);
                    var noteID = target.attr("data-id");
                    var starSet = target.hasClass("glyphicon-star");

                    $.ajax({
                        method: starSet ? "DELETE" : "PUT",
                        url: "/api/note/" + noteID + "/starAsync",
                        data: null
                    })
                        .done(function (r) {
                            target.removeClass();
                            target.addClass("glyphicon " + (starSet ? "glyphicon-star-empty" : "glyphicon-star"));
                        })
                        .fail(function (r) {
                            alert("Failed to change star status");
                        });
                });
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")


}
